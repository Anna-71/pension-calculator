from django.apps import AppConfig

class PcalcConfig(AppConfig):
    name = 'pcalc'
    def calc_pension(p1,p2,p3,year,db,lg,m):
        pk=0  # величина пенсионного капитала
        pb=0  # пенсионные баллы
        t=288 # ожидаемый период выплаты пенсии = 19 лет или 288 мес.
        stag=0
        if p1[0]>0:
            stag+=p1[0]
            k_sal2=k_sal5=0
            sal_ru2=1492
            sal_ru5=280
            if p1[2] >0:
                k_sal2= min(1.2, p1[2]/sal_ru2)
            if p1[3] >0:
                k_sal5= min(1.2, p1[3]/sal_ru5)
            k_sal=max(k_sal2,k_sal5) # выбор лучшего варианта для учета периода до 2001
            if m==0: ns=25
            else: ns=20
            k_st=0.55
            if p1[0]-ns>0: k_st+=min((p1[0]-ns)*0.01, 0.2)
            sal_01=1671
            rp=k_st*k_sal*sal_01
            bp=450
            pk=max(rp-bp,210)*t
      
            pk*=p1[0]/ns # поправка на неполный стаж на конец 2001 года
      
            ki=5.614166 # коэффициент индексации на конец 2001 года
            pk*=ki # индексация
            pk+=pk*(10+p1[1])*0.01 # валоризация (+ 10% + по 1% за каждый год стажа до 1991 г)
     
        sb=64.1
        if p2[0]>0:
            stag+=p2[0]
            v=p2[1]*12*p2[0]*0.16
            pk+=v # складываем пенсионные капиталы двух периодов
        if pk>0:  # если не было трудового и/или страхового стажа в период до 2014, то pk==0
            sp=pk/t  # конвертируем pk в срахову часть (sp), а затем в баллы (pb)
            pb=sp/sb # sb =64.1 - стоимость пенс. балла на 1 янв. 2015

        mb=(115200, 127360,140160,163360,184000,207720) #величины максимальных страховых по стране
        sb=(93, 98.86, 104.69, 110.55, 116.63)
        fb=(5686.25, 6044.48, 6401.10, 6759.56, 7131.36)
        kb=(18.6, 21, 23.4, 25.8, 28.2, 29.1, 30)
        cond2=cond3=''
        if p3[0]>0:
            stag+=p3[0]
            for i in mb: # добавляем пенсионные баллы с 2015 по 2020 считаем по каждому году.
                pb+=p3[1]*1.6/i*12
            pb+=(p3[0]-6)*12*p3[1]*1.6/mb[-1] # добавляем пенсионные баллы с 2020 до года выхода на пенсию для наемных
               
        if p3[2]>0:
            stag+=p3[2]
            pb+=p3[2]*12*p3[3]*16/22/mb[-1] # добавляем пенсионные баллы с 2020 до года выхода на пенсию для самозанятых
        pb+=db # добавочные баллы за нетрудовые социальнозначимые периоды       pb+=d 
            # первое условие назначения пенсии - достижение пенсионного возраста
            # проверка второго условия назначения пенсии (наличие необходимого трудового/страхового стажа)
        if stag<11+min(year-2020,4):
            cond2='Не набран минимальный трудовой/страховой стаж, который в ' + str(year) + ' году составляет ' + str(11+min(year-2020,4)) + ' лет!'
            
            # проверка третьего условия назначения пенсии (наличие необходимого количества пенсионных баллов)
        if year>2026:
            minb=kb[-1]
        else:
            minb=kb[year-2020]
        if pb<minb:
            cond3='Не набрано минимальное количество пенсионных баллов, которое в '+ str(year) + ' году составляет ' + str(minb) + ' баллов! '
           
        if year>2024:
            sumb=sb[-1]
            fix=fb[-1]
        else: 
            sumb=sb[year-2020]
            fix=fb[year-2020]
        if lg[0]: fix+=fix*0.5
        elif lg[1]: fix+=fix*0.3
        elif lg[2]: fix+=fix*0.25
        if cond2 or cond3: P=(pb,0,stag, cond2 + cond3)
        else: P=(pb,pb*sumb+fix, stag, '')
        return(P)
